{"version":3,"sources":["webpack:///./src/templates/blogPost.js"],"names":["postQuery","Template","data","pathContext","title","markdownRemark","frontmatter","date","html","next","prev","style","textAlign","padding","className","dangerouslySetInnerHTML","__html","to","path","role","aria-label"],"mappings":"2FAAA,sFAqCaA,EAAS,WAePC,UAjDE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAClBC,EAAQF,EAAKG,eAAeC,YAAYF,MACxCG,EAAOL,EAAKG,eAAeC,YAAYC,KACvCC,EAAON,EAAKG,eAAeG,KACzBC,EAAeN,EAAfM,KAAMC,EAASP,EAATO,KAEd,OACE,yBAAKC,MAAO,CAAEC,UAAW,SAAUC,QAAS,SAC1C,wBAAIC,UAAU,kBAAkBV,GAChC,6BACE,4BAAKG,IAGP,6BACA,yBAAKO,UAAU,WAAWC,wBAAyB,CAAEC,OAAQR,KAC7D,2BACGE,GACC,kBAAC,OAAD,CAAMO,GAAIP,EAAKJ,YAAYY,MACxBR,EAAKJ,YAAYF,MADpB,IAC2B,0BAAMe,KAAK,MAAMC,aAAW,cAA5B,OAD3B,aAKJ,2BACGX,GACC,kBAAC,OAAD,CAAMQ,GAAIR,EAAKH,YAAYY,MAA3B,QACO,0BAAMC,KAAK,MAAMC,aAAW,eAA5B,KAA6C,KACjDX,EAAKH,YAAYF","file":"component---src-templates-blog-post-js-f41b04b2a37ce7267759.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\n\nconst Template = ({ data, pathContext }) => {\n  const title = data.markdownRemark.frontmatter.title\n  const date = data.markdownRemark.frontmatter.date\n  const html = data.markdownRemark.html\n  const { next, prev } = pathContext\n\n  return (\n    <div style={{ textAlign: \"center\", padding: \"16px\" }}>\n      <h1 className=\"postPageHeader\">{title}</h1>\n      <div>\n        <em>{date}</em>\n      </div>\n\n      <br />\n      <div className=\"blogpost\" dangerouslySetInnerHTML={{ __html: html }} />\n      <p>\n        {prev && (\n          <Link to={prev.frontmatter.path}>\n            {prev.frontmatter.title} <span role=\"img\" aria-label=\"point-left\">ðŸ‘ˆ </span>Previous\n          </Link>\n        )}\n      </p>\n      <p>\n        {next && (\n          <Link to={next.frontmatter.path}>\n            Next <span role=\"img\" aria-label=\"point-right\">ðŸ‘‰{' '}</span>\n            {next.frontmatter.title}\n          </Link>\n        )}\n      </p>\n    </div>\n  )\n}\n\nexport const postQuery = graphql`\n  query($pathSlug: String!) {\n    markdownRemark(frontmatter: { path: { eq: $pathSlug } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM, DD, YYYY\")\n        path\n        tags\n        excerpt\n      }\n    }\n  }\n`\n\nexport default Template\n"],"sourceRoot":""}